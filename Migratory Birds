/*
Given an array of bird sightings where every element represents a bird type id, determine the id of the most frequently sighted type. If more than 1 type has been spotted that maximum amount, return the smallest of their ids.

Function Description

Complete the migratoryBirds function in the editor below.

migratoryBirds has the following parameter(s):

    int arr[n]: the types of birds sighted

Returns

    int: the lowest type id of the most frequently sighted birds
Sample Input 0

6
1 4 4 4 5 3

Sample Output 0

4

Sample Input 1

11
1 2 3 4 5 4 3 2 1 3 4

Sample Output 1

3

*/

 public static int migratoryBirds(List<Integer> arr) {
 Collections.sort(arr);
 int max=0;
 int res=0;
 int count=0;
 for(int i=0;i<arr.size();i++)
 {
     count=0;
     for(int j=i+1;j<arr.size();j++)
     {
         
         if(arr.get(i)==arr.get(j))
         {
             count++;
             //max=count;
             //i++;
             
             if(count>max)
             {
                 max=count;
                 res=arr.get(i);
             }
         }
         else{
             break;
         }
         
     }
 }

  return(res);  
    }
}
